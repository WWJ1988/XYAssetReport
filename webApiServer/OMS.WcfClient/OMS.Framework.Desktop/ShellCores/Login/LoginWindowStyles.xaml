<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:typeConverters="clr-namespace:OMS.Framework.Desktop.Converters">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <SolidColorBrush x:Key="ProductNameForegroundBrush" Color="#FF1D4C6A" />
    <SolidColorBrush x:Key="LabelForegroundBrush" Color="#FF0D7BA0" />

    <SolidColorBrush x:Key="SignInForegroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="SignInBackgroundBrush" Color="#FF0D7BA0" Opacity=".75"/>
    <SolidColorBrush x:Key="SignInBorderBrush" Color="#FF0D7BA0" />

    <Style TargetType="TextBlock" x:Key="ErrorTextStyle">
        <Setter Property="Visibility" Value="{Binding HasAlertText, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Foreground" Value="#FFB82929" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Background" Value="#7FFFFFFF" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style TargetType="TextBlock" x:Key="TaskHeaderTextStyle">
        <Setter Property="Foreground" Value="{DynamicResource ProductNameForegroundBrush}" />
        <Setter Property="FontSize" Value="14pt" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="LineHeight" Value="24" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Margin" Value="0 0 0 6" />
        <Setter Property="Padding" Value="0 0 0 4" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush AlignmentY="Bottom" AlignmentX="Left" Stretch="None" Opacity=".75">
                    <ImageBrush.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Brush="{x:Null}">
                                    <GeometryDrawing.Pen>
                                        <Pen Thickness="1" Brush="{DynamicResource ProductNameForegroundBrush}" />
                                    </GeometryDrawing.Pen>
                                    <GeometryDrawing.Geometry>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigure StartPoint="0,36">
                                                    <LineSegment Point="1000,36" IsStroked="True"/>
                                                </PathFigure>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LabelStyle" TargetType="Label" BasedOn="{x:Null}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12pt" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource LabelForegroundBrush}" />
        <Setter Property="Margin" Value="0 0 6 0" />
    </Style>
    <Style TargetType="TextBox" BasedOn="{x:Null}">
        <Setter Property="Height" Value="28" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 7 0 8" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style TargetType="PasswordBox" BasedOn="{x:Null}">
        <Setter Property="Height" Value="28" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 7 0 8" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{x:Null}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource LabelForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0 7 0 8" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GlyphButtonPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}, FallbackValue=White}" />
        <Setter Property="Stretch" Value="None" />
    </Style>
    <Style x:Key="GlyphButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Style.Resources>
            <Style BasedOn="{StaticResource GlyphButtonPathStyle}" TargetType="{x:Type Path}" />
        </Style.Resources>
    </Style>
    <Style x:Key="SignInButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource GlyphButtonStyle}" >
        <Setter Property="Foreground" Value="{StaticResource SignInForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource SignInBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource SignInBorderBrush}" />
        <Setter Property="TextElement.FontSize" Value="17pt" />
        <Setter Property="TextElement.FontWeight" Value="Normal" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#3F000000" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>