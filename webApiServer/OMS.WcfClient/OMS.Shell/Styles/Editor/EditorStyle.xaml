<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="Color.Editor.Background.Active">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.ActiveHover">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.ActiveInvalid">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.ActiveInvalidHover">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.Disabled">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.Hover">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.Invalid">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.InvalidHover">#FFFDFDFD</Color>
    <Color x:Key="Color.Editor.Background.Normal">#FFFDFDFD</Color>

    <Color x:Key="Color.Editor.Border.Active">#FF6399B9</Color>
    <Color x:Key="Color.Editor.Border.ActiveHover">#FFCCCCCC</Color>
    <Color x:Key="Color.Editor.Border.ActiveInvalid">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Border.ActiveInvalidHover">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Border.Disabled">#FFD0D0D0</Color>
    <Color x:Key="Color.Editor.Border.Hover">#FFCCCCCC</Color>
    <Color x:Key="Color.Editor.Border.Invalid">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Border.InvalidHover">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Border.Normal">#FFD0D0D0</Color>

    <Color x:Key="Color.Editor.Caret">#FFAFAFAF</Color>
    <Color x:Key="Color.Editor.Caret.Invalid">#FFAFAFAF</Color>

    <Color x:Key="Color.Editor.Foreground.Active">#FF3B3B3B</Color>
    <Color x:Key="Color.Editor.Foreground.ActiveHover">#FF3B3B3B</Color>
    <Color x:Key="Color.Editor.Foreground.ActiveInvalid">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Foreground.ActiveInvalidHover">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Foreground.Disabled">#FFD0D0D0</Color>
    <Color x:Key="Color.Editor.Foreground.Hover">#FF3B3B3B</Color>
    <Color x:Key="Color.Editor.Foreground.Invalid">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Foreground.InvalidHover">#FFD0021B</Color>
    <Color x:Key="Color.Editor.Foreground.Normal">#FF3B3B3B</Color>

    <Color x:Key="Color.Editor.TextSelection.Active">#FFADD6FF</Color>
    <Color x:Key="Color.Editor.TextSelection.ActiveInvalid">#1E6499B9</Color>
    <Color x:Key="Color.Editor.TextSelection.Inactive">#EEC6C6C6</Color>
    <Color x:Key="Color.Editor.TextSelection.InactiveInvalid">#FF727272</Color>

    <!-- Currently combines select resources used in standard Button/ToggleButton and standard TextBox controls-->
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.Normal"
					 Color="{StaticResource Color.Editor.Background.Normal}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.Hover"
					 Color="{StaticResource Color.Editor.Background.Hover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.Active"
					 Color="{StaticResource Color.Editor.Background.Active}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.ActiveHover"
					 Color="{StaticResource Color.Editor.Background.ActiveHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.Invalid"
					 Color="{StaticResource Color.Editor.Background.Invalid}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.InvalidHover"
					 Color="{StaticResource Color.Editor.Background.InvalidHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.ActiveInvalid"
					 Color="{StaticResource Color.Editor.Background.ActiveInvalid}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.ActiveInvalidHover"
					 Color="{StaticResource Color.Editor.Background.ActiveInvalidHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Background.Disabled"
					 Color="{StaticResource Color.Editor.Background.Disabled}" />

    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.Normal"
					 Color="{StaticResource Color.Editor.Border.Normal}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.Hover"
					 Color="{StaticResource Color.Editor.Border.Hover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.Active"
					 Color="{StaticResource Color.Editor.Border.Active}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.ActiveHover"
					 Color="{StaticResource Color.Editor.Border.ActiveHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.Invalid"
					 Color="{StaticResource Color.Editor.Border.Invalid}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.InvalidHover"
					 Color="{StaticResource Color.Editor.Border.InvalidHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.ActiveInvalid"
					 Color="{StaticResource Color.Editor.Border.ActiveInvalid}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.ActiveInvalidHover"
					 Color="{StaticResource Color.Editor.Border.ActiveInvalidHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Border.Disabled"
					 Color="{StaticResource Color.Editor.Border.Disabled}" />

    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.Normal"
					 Color="{StaticResource Color.Editor.Foreground.Normal}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.Hover"
					 Color="{StaticResource Color.Editor.Foreground.Hover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.Active"
					 Color="{StaticResource Color.Editor.Foreground.Active}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.ActiveHover"
					 Color="{StaticResource Color.Editor.Foreground.ActiveHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.Invalid"
					 Color="{StaticResource Color.Editor.Foreground.Invalid}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.InvalidHover"
					 Color="{StaticResource Color.Editor.Foreground.InvalidHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.ActiveInvalid"
					 Color="{StaticResource Color.Editor.Foreground.ActiveInvalid}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.ActiveInvalidHover"
					 Color="{StaticResource Color.Editor.Foreground.ActiveInvalidHover}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Foreground.Disabled"
					 Color="{StaticResource Color.Editor.Foreground.Disabled}" />

    <SolidColorBrush x:Key="Brush.ComboBoxEditor.Caret"
					 Color="{StaticResource Color.Editor.Caret}" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.CaretInvalid"
					 Color="{StaticResource Color.Editor.Caret.Invalid}" />

    <SolidColorBrush x:Key="Brush.ComboBoxEditor.TextSelection.Active"
					 Color="{StaticResource Color.Editor.TextSelection.Active}"
					 Opacity=".35" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.TextSelection.ActiveInvalid"
					 Color="{StaticResource Color.Editor.TextSelection.ActiveInvalid}"
					 Opacity=".25" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.TextSelection.Inactive"
					 Color="{StaticResource Color.Editor.TextSelection.Inactive}"
					 Opacity=".35" />
    <SolidColorBrush x:Key="Brush.ComboBoxEditor.TextSelection.InactiveInvalid"
					 Color="{StaticResource Color.Editor.TextSelection.InactiveInvalid}"
					 Opacity=".25" />

    <!-- Editor Colors -->

    <!-- REGION Editor Brushes -->
    <SolidColorBrush x:Key="Brush.Editor.Background.Normal"
					 Color="{StaticResource Color.Editor.Background.Normal}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.Hover"
					 Color="{StaticResource Color.Editor.Background.Hover}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.Active"
					 Color="{StaticResource Color.Editor.Background.Active}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.ActiveHover"
					 Color="{StaticResource Color.Editor.Background.ActiveHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.Invalid"
					 Color="{StaticResource Color.Editor.Background.Invalid}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.InvalidHover"
					 Color="{StaticResource Color.Editor.Background.InvalidHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.ActiveInvalid"
					 Color="{StaticResource Color.Editor.Background.ActiveInvalid}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.ActiveInvalidHover"
					 Color="{StaticResource Color.Editor.Background.ActiveInvalidHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Background.Disabled"
					 Color="{StaticResource Color.Editor.Background.Disabled}" />

    <SolidColorBrush x:Key="Brush.Editor.Border.Normal"
					 Color="{StaticResource Color.Editor.Border.Normal}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.Hover"
					 Color="{StaticResource Color.Editor.Border.Hover}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.Active"
					 Color="{StaticResource Color.Editor.Border.Active}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.ActiveHover"
					 Color="{StaticResource Color.Editor.Border.ActiveHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.Invalid"
					 Color="{StaticResource Color.Editor.Border.Invalid}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.InvalidHover"
					 Color="{StaticResource Color.Editor.Border.InvalidHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.ActiveInvalid"
					 Color="{StaticResource Color.Editor.Border.ActiveInvalid}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.ActiveInvalidHover"
					 Color="{StaticResource Color.Editor.Border.ActiveInvalidHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Border.Disabled"
					 Color="{StaticResource Color.Editor.Border.Disabled}" />

    <SolidColorBrush x:Key="Brush.Editor.Foreground.Normal"
					 Color="{StaticResource Color.Editor.Foreground.Normal}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.Hover"
					 Color="{StaticResource Color.Editor.Foreground.Hover}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.Active"
					 Color="{StaticResource Color.Editor.Foreground.Active}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.ActiveHover"
					 Color="{StaticResource Color.Editor.Foreground.ActiveHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.Invalid"
					 Color="{StaticResource Color.Editor.Foreground.Invalid}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.InvalidHover"
					 Color="{StaticResource Color.Editor.Foreground.InvalidHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.ActiveInvalid"
					 Color="{StaticResource Color.Editor.Foreground.ActiveInvalid}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.ActiveInvalidHover"
					 Color="{StaticResource Color.Editor.Foreground.ActiveInvalidHover}" />
    <SolidColorBrush x:Key="Brush.Editor.Foreground.Disabled"
					 Color="{StaticResource Color.Editor.Foreground.Disabled}" />

    <SolidColorBrush x:Key="Brush.Editor.TextSelection.Active"
					 Color="{StaticResource Color.Editor.TextSelection.Active}"
					 Opacity=".35" />
    <SolidColorBrush x:Key="Brush.Editor.TextSelection.Inactive"
					 Color="{StaticResource Color.Editor.TextSelection.Inactive}"
					 Opacity=".25" />
    <SolidColorBrush x:Key="Brush.Editor.TextSelection.ActiveInvalid"
					 Color="{StaticResource Color.Editor.TextSelection.ActiveInvalid}"
					 Opacity=".35" />
    <SolidColorBrush x:Key="Brush.Editor.TextSelection.InactiveInvalid"
					 Color="{StaticResource Color.Editor.TextSelection.InactiveInvalid}"
					 Opacity=".25" />

    <SolidColorBrush x:Key="Brush.Editor.Caret"
					 Color="{StaticResource Color.Editor.Caret}" />
    <SolidColorBrush x:Key="Brush.Editor.Caret.Invalid"
					 Color="{StaticResource Color.Editor.Caret.Invalid}" />
    <!-- END REGION Editor Brushes -->

    <!-- REGION ComboBox Styles-->
    <!--  REGION ComboBox Components  -->
    <ControlTemplate x:Key="ControlTemplate.ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Rectangle Grid.ColumnSpan="2"
		           Effect="{TemplateBinding Effect}"
		           Fill="{TemplateBinding Background}"
		           Stroke="{TemplateBinding BorderBrush}" />
    </ControlTemplate>

    <Style x:Key="Style.ComboBoxToggleButton.Default"
	       TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template" Value="{StaticResource ControlTemplate.ComboBoxToggleButton}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Press" />
    </Style>

    <Style x:Key="Style.ComboBoxTextBox.Default"
		   BasedOn="{StaticResource {x:Type TextBox}}"
	       TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" 
				Value="true" />
        <Setter Property="Foreground"
				Value="{StaticResource Brush.ComboBoxEditor.Foreground.Normal}" />
        <Setter Property="Background"
				Value="{StaticResource Brush.ComboBoxEditor.Background.Normal}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource Brush.ComboBoxEditor.Border.Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush"
				Value="{StaticResource Brush.ComboBoxEditor.Caret}" />
        <Setter Property="SelectionBrush"
				Value="{StaticResource Brush.ComboBoxEditor.TextSelection.Active}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border"
					        Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=ComboBox}, FallbackValue=True}" Value="False" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=ComboBox}, FallbackValue=True}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource Brush.ComboBoxEditor.TextSelection.Inactive}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Style.ComboBoxItem.Default" TargetType="ComboBoxItem">
        <Setter Property="Foreground"
					Value="{StaticResource Brush.ComboBoxItem.Foreground.Normal}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Rectangle x:Name="BackgroundLayer"
									        Fill="{TemplateBinding Background}"
									        Stroke="{Binding Fill,
									        RelativeSource={RelativeSource Self}}">
                        </Rectangle>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
									                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
									Value="{StaticResource Brush.ComboBoxItem.Background.Hover}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.ComboBoxItem.Foreground.Hover}" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundLayer"
											Property="Fill"
									Value="{StaticResource Brush.ComboBoxItem.Background.Active}" />
                            <Setter TargetName="BackgroundLayer"
											Property="Stroke"
									Value="{StaticResource Brush.ComboBoxItem.Border.Active}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.ComboBoxItem.Foreground.Active}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundLayer"
									Property="Fill"
									Value="{StaticResource Brush.ComboBoxItem.Background.Disabled}" />
                            <Setter TargetName="BackgroundLayer"
									Property="Stroke"
									Value="{StaticResource Brush.ComboBoxItem.Border.Disabled}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.ComboBoxItem.Foreground.Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.ComboBox.Default" TargetType="{x:Type ComboBox}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="{StaticResource Brush.ComboBoxEditor.Foreground.Normal}" />
        <Setter Property="Background" Value="{StaticResource Brush.ComboBoxEditor.Background.Normal}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.ComboBoxEditor.Border.Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="bg"
						           Grid.ColumnSpan="2"
						           Margin="0 0 0 0"
						           Effect="{TemplateBinding Effect}"
						           Fill="{TemplateBinding Background}"
						           Stroke="{TemplateBinding BorderBrush}" />
                        <ToggleButton x:Name="ToggleButton"
						              Grid.ColumnSpan="2"
						              IsChecked="{Binding Path=IsDropDownOpen,
						                                  Mode=TwoWay,
						                                  RelativeSource={RelativeSource TemplatedParent}}"
						              Style="{StaticResource Style.ComboBoxToggleButton.Default}" />
                        <Path x:Name="Arrow"
						      Grid.Column="1"
						      Margin="4 0"
						      HorizontalAlignment="Center"
						      VerticalAlignment="Center"
						      Data="M 0 0 L 4 4 L 8 0 Z"
						      DockPanel.Dock="Right"
						      Fill="{StaticResource Brush.ComboBoxEditor.Foreground.Normal}"
						      IsHitTestVisible="False" />
                        <Border Grid.Column="0"
						        VerticalAlignment="Center"
						        Padding="8 5 0 5">
                            <ContentPresenter x:Name="ContentSite"
							                  Grid.Column="0"
							                  VerticalAlignment="Center"
							                  Content="{TemplateBinding SelectionBoxItem}"
							                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							                  IsHitTestVisible="False" />
                        </Border>
                        <TextBox x:Name="PART_EditableTextBox"
						         Grid.Column="0"
						         Margin="1"
						         VerticalAlignment="Center"
						         BorderBrush="#20FFFFFF"
						         BorderThickness="0 0 0 0"
						         Focusable="True"
						         IsReadOnly="{TemplateBinding IsReadOnly}"
						         Padding="2 2 0 2"
						         Style="{StaticResource Style.ComboBoxTextBox.Default}"
						         Visibility="Hidden" />

                        <Rectangle x:Name="FocusBorder" SnapsToDevicePixels="True" Grid.ColumnSpan="2" Margin="0" Fill="{x:Null}" StrokeThickness="1" Stroke="Transparent" 
								   IsHitTestVisible="False"/>
                        <Popup x:Name="Popup"
						       AllowsTransparency="False"
						       Focusable="False"
						       IsOpen="{TemplateBinding IsDropDownOpen}"
						       Placement="Bottom"
						       PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
							      MinWidth="{TemplateBinding ActualWidth}"
							      MaxHeight="{TemplateBinding MaxDropDownHeight}"
							      SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
								        BorderThickness="1"
								        CornerRadius="0" />
                                <ScrollViewer Margin="2"
								              CanContentScroll="True"
								              HorizontalScrollBarVisibility="Auto"
								              VerticalScrollBarVisibility="Auto">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="94" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
									Value="{StaticResource Brush.ComboBoxEditor.Background.Hover}" />
                            <Setter Property="BorderBrush"
									Value="{StaticResource Brush.ComboBoxEditor.Border.Hover}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.ComboBoxEditor.Foreground.Hover}" />

                        </Trigger>
                        <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
									Value="{StaticResource Brush.Editor.Background.Hover}" />
                            <Setter Property="BorderBrush"
									Value="{StaticResource Brush.Editor.Border.Hover}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.Editor.Foreground.Hover}" />

                        </Trigger>
                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter Property="Background"
									Value="{StaticResource Brush.Editor.Background.Hover}" />
                            <Setter Property="BorderBrush"
									Value="{StaticResource Brush.Editor.Border.Hover}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.Editor.Foreground.Hover}" />

                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush"
									Value="{StaticResource Brush.ComboBoxEditor.Border.Active}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush"
									Value="{StaticResource Brush.ComboBoxEditor.Border.Active}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"
									Value="{StaticResource Brush.ComboBoxEditor.Background.Disabled}" />
                            <Setter Property="BorderBrush"
									Value="{StaticResource Brush.ComboBoxEditor.Border.Disabled}" />
                            <Setter Property="Foreground"
									Value="{StaticResource Brush.ComboBoxEditor.Foreground.Disabled}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="ToggleButton" Property="IsChecked" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Popup" Property="IsOpen" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  END REGION  -->

    <!--<Style x:Key="Style.ComboBox.Default" BasedOn="{x:Null}" TargetType="{x:Type ComboBox}" />-->

    <Style TargetType="ComboBox"
		   BasedOn="{StaticResource Style.ComboBox.Default}"
		   x:Key="{x:Type ComboBox}" />

    <!-- REGION ComboBoxItem Styles -->
    <!--<Style x:Key="Style.ComboBoxItem.Default" BasedOn="{x:Null}" TargetType="{x:Type ComboBoxItem}" />-->

    <Style TargetType="ComboBoxItem"
		   BasedOn="{StaticResource Style.ComboBoxItem.Default}"
		   x:Key="{x:Type ComboBoxItem}" />
    <!-- END REGION ComboBoxItem Styles -->

    <!-- END REGION ComboBox Styles-->

    <Style TargetType="{x:Type Border}" x:Key="FrameworkBorder">
        <Setter Property="BorderBrush" Value="#FFBDBEBD"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="#FF0D7BA0" />
        <Setter Property="BorderBrush" Value="#FF0D7BA0" />
        <Setter Property="TextElement.FontWeight" Value="Normal" />
        <Setter Property="MinWidth" Value="80"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#3F000000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LinkButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="95"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{StaticResource FrameworkBorder}" Background="White">
                        <StackPanel VerticalAlignment="Center">
                            <Label Cursor="Hand" 
                                       Foreground="#FF2D90EB" 
                                       Content="{TemplateBinding Content }"
                                       FontSize="50"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            </Label>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>